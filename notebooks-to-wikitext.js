const notebooks = require("./out.json");
const prettyBytes = require("pretty-bytes");

for (let notebook of notebooks) notebook.size = parseInt(notebook.size, 10);

console.log(`
This information has been autogenerated by an [https://github.com/joakin/paws-notebooks-list OSS script] from the public PAWS index.

There are ${notebooks.length} entries, so the tables are huge, and collapsed by default.

{{TOC}}
`);
console.log("=By size=");
const notebooksBySize = notebooks.sort((o, u) => u.size - o.size);
printTableOfNotebooks(notebooksBySize);
console.log("=By date=");
const notebooksByDate = notebooks.sort(dateStringCompare);
printTableOfNotebooks(notebooksByDate);

//

function printTableOfNotebooks(notebooks) {
  console.log(`
{| class="wikitable mw-collapsible mw-collapsed"
|+
!Notebook
!User
!Size
!Date
`);

  notebooks.forEach((n) => {
    console.log(
      `|-
|[${n.href} ${n.name.split(".ipynb")[0]}]
|[${n.userHref} ${n.user}]
|${prettyBytes(n.size)}
|${n.date}`
    );
  });
  console.log(`|}`);
}

function dateStringCompare(n1, n2) {
  let d1 = dateStringParse(n1.date);
  let d2 = dateStringParse(n2.date);
  return (
    -1 *
    (d1.year !== d2.year
      ? d1.year - d2.year
      : d1.month !== d2.month
      ? d1.month - d2.month
      : d1.day !== d2.day
      ? d1.day - d2.day
      : d1.hour !== d2.hour
      ? d1.hour - d2.hour
      : d1.minute - d2.minute)
  );
}

function dateStringParse(d) {
  let [year, , month, , day, , hour, , minute] = d.split(/( |-|:)/g);
  return {
    year: parseInt(year, 10),
    month: monthToNumber(month),
    day: parseInt(day, 10),
    hour: parseInt(hour, 10),
    minute: parseInt(minute, 10),
  };
}

function monthToNumber(m) {
  return {
    Jan: 1,
    Feb: 2,
    Mar: 3,
    Apr: 4,
    May: 5,
    Jun: 6,
    Jul: 7,
    Aug: 8,
    Sep: 9,
    Oct: 10,
    Nov: 11,
    Dec: 12,
  }[m];
}
